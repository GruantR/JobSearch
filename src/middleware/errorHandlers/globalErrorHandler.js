const handleSequelizeErrors = require('./sequelizeErrorHandler');
const {AppError} = require('../../errors/customErrors');


const globalErrorHandler = (error, req, res, next) => {
    // 1. –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
    console.error('üî• Error:', {
      message: error.message,    // –°–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏
      stack: error.stack,        // –°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤ (–≥–¥–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞)
      url: req.url,              // –ö–∞–∫–æ–π URL –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏
      method: req.method,        // –ú–µ—Ç–æ–¥ –∑–∞–ø—Ä–æ—Å–∞ (GET, POST, etc.)
      body: req.body             // –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
    });
  
    // 2. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ Sequelize
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –ë–î –≤ –ø–æ–Ω—è—Ç–Ω—ã–µ –∫–∞—Å—Ç–æ–º–Ω—ã–µ –æ—à–∏–±–∫–∏
    const processedError = handleSequelizeErrors(error);
  
    // 3. –ï—Å–ª–∏ —ç—Ç–æ –Ω–∞—à–∞ –∫–∞—Å—Ç–æ–º–Ω–∞—è –æ—à–∏–±–∫–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–µ —Å—Ç–∞—Ç—É—Å –∫–æ–¥
    if (processedError instanceof AppError) {
      return res.status(processedError.statusCode).json({
        success: false,          // –ï–¥–∏–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞
        message: processedError.message, // –ü–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
        // –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –º–æ–∂–µ–º –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–µ–∫—Ç—Ä–µ–π—Å
        ...(process.env.NODE_ENV === 'development' && { stack: processedError.stack })
      });
    }
  
    // 4. –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ (–±–∞–≥–∏) - –æ–±—â–∏–π –æ—Ç–≤–µ—Ç
    return res.status(500).json({
      success: false,
      message: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
      // –í development —Ä–µ–∂–∏–º–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      ...(process.env.NODE_ENV === 'development' && { 
        error: processedError.message,
        stack: processedError.stack 
      })
    });
  };

  module.exports = globalErrorHandler;