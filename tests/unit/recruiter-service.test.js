// –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–µ—Ä–≤–∏—Å –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å
const RecruiterService = require('../../src/services/recruitersService');

//describe - –≥—Ä—É–ø–ø–∞ —Ç–µ—Å—Ç–æ–≤
describe('RecruiterService - –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤', ()=>{

// test - –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç
test('–î–æ–ª–∂–µ–Ω —Ä–∞–∑—Ä–µ—à–∞—Ç—å –ø–µ—Ä–µ—Ö–æ–¥ –∏–∑ contacting –≤ waiting',()=>{
   
// expect - –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
expect(()=>{
    RecruiterService.validateStatusTransition('contacting', 'waiting');
}).not.toThrow(); // "–Ω–µ –¥–æ–ª–∂–µ–Ω –±—Ä–æ—Å–∞—Ç—å –æ—à–∏–±–∫—É"
});

test('–î–æ–ª–∂–µ–Ω –∑–∞–ø—Ä–µ—â–∞—Ç—å –ø–µ—Ä–µ—Ö–æ–¥ –∏–∑ got_offer –≤ contacting', () => {
    expect(() => {
      RecruiterService.validateStatusTransition('got_offer', 'contacting');
    }).toThrow(); // "–¥–æ–ª–∂–µ–Ω –±—Ä–æ—Å–∞—Ç—å –æ—à–∏–±–∫—É"
  });


  test('–î–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞', () => {
    const description = RecruiterService.getStatusDescription('contacting');
    expect(description).toBe('–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ üìû');
  });


}

)